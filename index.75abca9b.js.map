{"mappings":"AAAA,IAAMA,WAAaC,SAASC,iBAAiB,gBAE7C,SAASC,SAASC,GAChB,IAaMC,EAAK,IAAIC,sBAVC,SAAUC,EAASC,GACjCD,EAAQE,SAAQ,SAAAC,G,IAAGC,EAAMD,EAANC,OACjB,GADuCD,EAAdE,eACL,CAClB,IAAMC,EAAUF,EAAOG,QAAQC,IAC/BJ,EAAOI,IAAMF,EACbG,QAAQC,IAAIJ,GACZL,EAASU,UAAUP,E,OATT,CACdQ,WAAY,SAadf,EAAQK,SAAQ,SAAAE,G,OAAUN,EAAGe,QAAQT,E,IAGvCR,SAASH","sources":["src/js/infinite-scroll.js"],"sourcesContent":["const galleryRef = document.querySelectorAll('.gallery img');\n\nfunction lazyLoad(targets) {\n  const options = {\n    rootMargin: '10px',\n  };\n  const onEntry = function (entries, observer) {\n    entries.forEach(({ target, isIntersecting }) => {\n      if (isIntersecting) {\n        const dataSrc = target.dataset.src;\n        target.src = dataSrc;\n        console.log(dataSrc);\n        observer.unobserve(target);\n      }\n    });\n  };\n  const io = new IntersectionObserver(onEntry, options);\n  targets.forEach(target => io.observe(target));\n}\n\nlazyLoad(galleryRef);\n\n// galleryRef.forEach(img => {\n//   img.addEventListener('load', () => {\n//     console.log('load');\n//     img.classList.add('appear');\n//   });\n// });\n"],"names":["galleryRef","document","querySelectorAll","lazyLoad","targets","io","IntersectionObserver","entries","observer","forEach","param","target","isIntersecting","dataSrc","dataset","src","console","log","unobserve","rootMargin","observe"],"version":3,"file":"index.75abca9b.js.map"}